//HintName: SignalRBridgeGenerator.g.cs
// <auto-generated />
// 1 hub found


namespace Test
{
    public partial class TestHub
    {
        public const string HubDispatcherActorSelection = "/user/signalr/testhub";
        
        private readonly global::Akka.Actor.ActorSystem _actorSystem;
        
        public TestHub(global::Akka.Actor.ActorSystem actorSystem)
        {
            _actorSystem = actorSystem ?? throw new ArgumentNullException(nameof(actorSystem));
        }
        
        public global::System.Threading.Tasks.Task SayHello(global::System.String name)
        {
            var msg = new ToServer.SayHello(Context.ConnectionId, Context.UserIdentifier, Context.User , name);
            _actorSystem.ActorSelection(HubDispatcherActorSelection).Tell(msg);
            return global::System.Threading.Tasks.Task.CompletedTask;
        }
        
        public global::System.Threading.Tasks.Task SayBye(global::System.String name)
        {
            var msg = new ToServer.SayBye(Context.ConnectionId, Context.UserIdentifier, Context.User , name);
            _actorSystem.ActorSelection(HubDispatcherActorSelection).Tell(msg);
            return global::System.Threading.Tasks.Task.CompletedTask;
        }
        
        public static class ToClient
        {
            /// <summary>
            /// <see cref="SayHello"> is derived from 
            /// <see cref="global::Test.ITestClient.SayHello(global::System.String)"></summary>
            public record SayHello(string ConnectionId, global::System.String Name)
            {
                public global::System.Threading.Tasks.Task Invoke(global::Microsoft.AspNetCore.SignalR.IClientProxy clientProxy, global::Microsoft.AspNetCore.SignalR.IClientProxy cancellationToken = default)
                    => clientProxy.SendAsync("SayHello", Name, cancellationToken);
                
            }
            
            /// <summary>
            /// <see cref="SayCongratulation"> is derived from 
            /// <see cref="global::Test.ITestClient.SayCongratulation(global::System.String, global::System.DateTime)"></summary>
            public record SayCongratulation(string ConnectionId, global::System.String Name, global::System.DateTime DateOfBirth)
            {
                public global::System.Threading.Tasks.Task Invoke(global::Microsoft.AspNetCore.SignalR.IClientProxy clientProxy, global::System.Threading.CancellationToken cancellationToken = default)
                    => clientProxy.SendAsync("SayCongratulation", Name, DateOfBirth, cancellationToken);
                
            }
            
        }
        
        
        public static class ToServer
        {
            /// <summary>
            /// <see cref="SayHello"> is derived from 
            /// <see cref="global::Test.ITestServer.SayHello(global::System.String)"></summary>
            public record SayHello(string ConnectionId, string UserIdentifier, global::System.Security.Claims.ClaimsPrincipal User, global::System.String Name)
            {
                public global::System.Threading.Tasks.Task Invoke(global::Microsoft.AspNetCore.SignalR.IClientProxy clientProxy, global::Microsoft.AspNetCore.SignalR.IClientProxy cancellationToken = default)
                    => clientProxy.SendAsync("SayHello", Name, cancellationToken);
            }
            
            /// <summary>
            /// <see cref="SayBye"> is derived from 
            /// <see cref="global::Test.ITestServer.SayBye(global::System.String)"></summary>
            public record SayBye(string ConnectionId, string UserIdentifier, global::System.Security.Claims.ClaimsPrincipal User, global::System.String Name)
            {
                public global::System.Threading.Tasks.Task Invoke(global::Microsoft.AspNetCore.SignalR.IClientProxy clientProxy, global::Microsoft.AspNetCore.SignalR.IClientProxy cancellationToken = default)
                    => clientProxy.SendAsync("SayBye", Name, cancellationToken);
                
            }
            
        }
        
        
    }
}
